Last login: Sun Jan  6 22:34:48 on ttys000
LYQdeMacBook-Pro% git
'usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
LYQdeMacBook-Pro% '
quote>
quote>
quote>
quote>
LYQdeMacBook-Pro% ls
AnacondaProjects	Movies			anaconda3
Desktop			Music			logs
Documents		Pictures		python-test
Downloads		Public
Library			PycharmProjects
LYQdeMacBook-Pro% git
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
LYQdeMacBook-Pro%
LYQdeMacBook-Pro%
LYQdeMacBook-Pro%
LYQdeMacBook-Pro%
LYQdeMacBook-Pro%
LYQdeMacBook-Pro% ['Appellation', 'Survived', 'Pclass', 'Sex', 'Age', 'Fare', 'Embarked',
       'GroupTicket', 'GroupCabin', 'GroupAge', 'FamilyNumber']
zsh: bad pattern: [Appellation,
LYQdeMacBook-Pro%
LYQdeMacBook-Pro%

LYQdeMacBook-Pro% git clone https://github.com/lyqCamus/python.git
'Cloning into 'python'...
remote: Enumerating objects: 4, done.
remote: Counting objects: 100% (4/4), done.
remote: Compressing objects: 100% (3/3), done.
remote: Total 4 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (4/4), done.
LYQdeMacBook-Pro% 'ls
quote>
quote>
quote>
quote>
LYQdeMacBook-Pro% ls
AnacondaProjects	Movies			anaconda3
Desktop			Music			logs
Documents		Pictures		python
Downloads		Public			python-test
Library			PycharmProjects
LYQdeMacBook-Pro% cd python
LYQdeMacBook-Pro% ls
Untitled.md
LYQdeMacBook-Pro% git remote
origin
LYQdeMacBook-Pro% git remote show origin
* remote origin
  Fetch URL: https://github.com/lyqCamus/python.git
  Push  URL: https://github.com/lyqCamus/python.git
  HEAD branch: master
  Remote branch:
    master tracked
  Local branch configured for 'git pull':
    master merges with remote master
  Local ref configured for 'git push':
    master pushes to master (up to date)
LYQdeMacBook-Pro% cd ~./ssh
zsh: no such user or named directory: .
LYQdeMacBook-Pro% ls
Untitled.md
LYQdeMacBook-Pro% cd ~
LYQdeMacBook-Pro% ls
AnacondaProjects	Movies			anaconda3
Desktop			Music			logs
Documents		Pictures		python
Downloads		Public			python-test
Library			PycharmProjects

LYQdeMacBook-Pro% cd .ssh
LYQdeMacBook-Pro% ls

LYQdeMacBook-Pro% cd ..
LYQdeMacBook-Pro% ls
AnacondaProjects	Movies			anaconda3
Desktop			Music			logs
Documents		Pictures		python
Downloads		Public			python-test
Library			PycharmProjects
LYQdeMacBook-Pro% cd python


LYQdeMacBook-Pro% git add Untitled.md
LYQdeMacBook-Pro% git push
Username for 'https://github.com': lyqCamus
Password for 'https://lyqCamus@github.com':
Everything up-to-date
LYQdeMacBook-Pro% git push origin
Everything up-to-date
LYQdeMacBook-Pro% git diff
LYQdeMacBook-Pro% ls
Untitled.md
LYQdeMacBook-Pro% touch 123.txt
LYQdeMacBook-Pro% ls
123.txt		Untitled.md
LYQdeMacBook-Pro% git add 123.txt
LYQdeMacBook-Pro% git add 123.txt
LYQdeMacBook-Pro% git commmit
git: 'commmit' is not a git command. See 'git --help'.

The most similar command is
	commit
LYQdeMacBook-Pro% git commit
Aborting commit due to empty commit message.
LYQdeMacBook-Pro% git commit -m
error: switch `m' requires a value
LYQdeMacBook-Pro% git commit -m '123'
[master 9f91e78] 123
 2 files changed, 4 insertions(+), 4 deletions(-)
 create mode 100644 123.txt
LYQdeMacBook-Pro% git push origin
Enumerating objects: 6, done.
Counting objects: 100% (6/6), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (4/4), 331 bytes | 331.00 KiB/s, done.
Total 4 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/lyqCamus/python.git
   89f3316..9f91e78  master -> master
LYQdeMacBook-Pro%
